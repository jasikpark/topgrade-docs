<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Topgrade</title><link>https://jasikpark.github.io/topgrade-docs/docs/general/</link><description>Recent content on Topgrade</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://jasikpark.github.io/topgrade-docs/docs/general/index.xml" rel="self" type="application/rss+xml"/><item><title>Desktop Notifications</title><link>https://jasikpark.github.io/topgrade-docs/docs/general/desktop-notifications/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jasikpark.github.io/topgrade-docs/docs/general/desktop-notifications/</guid><description>Desktop Notifications # Topgrade sends a desktop notification when a step has been failed. Desktop notifications works by default in macOS. On Linux, notify-send has to be installed in order for them to work.
Desktop notifications on other platforms is not supported at the moment.
If the configuration variable notify_each_step is set to true, Topgrade will send a desktop notification at the beginning of each step.</description></item><item><title>Run Topgrade from Source</title><link>https://jasikpark.github.io/topgrade-docs/docs/general/run-topgrade-from-source/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jasikpark.github.io/topgrade-docs/docs/general/run-topgrade-from-source/</guid><description>Run Topgrade from Source # Install the latest version of Rust. The recommended method is to use rustup Clone this repository Run cargo run If you wish to pass arguments to Topgrade you should pass them after --: cargo run -- -v</description></item><item><title>Step List</title><link>https://jasikpark.github.io/topgrade-docs/docs/general/step-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jasikpark.github.io/topgrade-docs/docs/general/step-list/</guid><description>Steps that Topgrade takes when upgrading: # Linux: Run the system package manager: Arch based: Run yay or fall back to pacman Redhat based: Run yum upgrade (or dnf if present) Debian based: Run apt update &amp;amp;&amp;amp; apt dist-upgrade Clear Linux: Run swupd update Gentoo: Run layman -s ALL &amp;amp;&amp;amp; emerge --sync -q &amp;amp;&amp;amp; eix-update &amp;amp;&amp;amp; emerge -uDNa world openSUSE: Run zypper refresh &amp;amp;&amp;amp; zypper dist-upgrade Void: Run xbps-install -Su Linux: Run etc-update: DragonFly BSD: Upgrade and audit packages FreeBSD: Upgrade and audit packages Unix: Run brew update &amp;amp;&amp;amp; brew upgrade.</description></item><item><title>Supported Platforms</title><link>https://jasikpark.github.io/topgrade-docs/docs/general/supported-platforms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jasikpark.github.io/topgrade-docs/docs/general/supported-platforms/</guid><description>Supported Platforms # Topgrade should probably work on whichever platform it can be built. The real question is whether Topgrade knows that platform and can utilize its unique features, such as the operating system&amp;rsquo;s package manager. Topgrade is tested on and knows the following platforms:
Linux Arch based Red Hat based Debian based Clear Linux Gentoo NixOS openSUSE Void DragonFly BSD FreeBSD macOS Windows</description></item><item><title>Upgrading Topgrade</title><link>https://jasikpark.github.io/topgrade-docs/docs/general/upgrading-topgrade/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jasikpark.github.io/topgrade-docs/docs/general/upgrading-topgrade/</guid><description>Upgrading Topgrade # The precompiled binaries supplied in the Github releases page are compiled with a self upgrade feature. Topgrade will try to upgrade itself before attempting anything else and will respawn itself when an update is downloaded. If you choose to install Topgrade in this method it is recommended that you place the binary in some place which is writable by your user account, such as ~/.local/bin.
If you prefer to have Topgrade installed in system-wide manner then it&amp;rsquo;s recommended to either install it using the OS package manager or cargo install.</description></item><item><title>Windows</title><link>https://jasikpark.github.io/topgrade-docs/docs/general/windows/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jasikpark.github.io/topgrade-docs/docs/general/windows/</guid><description>Windows # Windows is fully supported by Topgrade. You can either install it from Scoop or use the binary in the release page.
One thing to note is that Topgrade will fail to upgrade any application used for launching it, such as 3rd party terminals like cmder.
My personal recommendation is to create a shortcut for topgrade --keep and set this shortcut to always run as administrator, then invoke Topgrade by doubling clicking the shortcut.</description></item></channel></rss>