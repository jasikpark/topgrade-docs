<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction on Topgrade</title><link>https://topgrade.info/</link><description>Recent content in Introduction on Topgrade</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://topgrade.info/index.xml" rel="self" type="application/rss+xml"/><item><title>Desktop Notifications</title><link>https://topgrade.info/docs/general/desktop-notifications/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://topgrade.info/docs/general/desktop-notifications/</guid><description>Desktop Notifications # Topgrade sends a desktop notification when a step has been failed. Desktop notifications works by default in macOS. On Linux, notify-send has to be installed in order for them to work.
Desktop notifications on other platforms is not supported at the moment.
If the configuration variable notify_each_step is set to true, Topgrade will send a desktop notification at the beginning of each step.</description></item><item><title>Run Topgrade from Source</title><link>https://topgrade.info/docs/general/run-topgrade-from-source/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://topgrade.info/docs/general/run-topgrade-from-source/</guid><description>Run Topgrade from Source # Install the latest version of Rust. The recommended method is to use rustup Clone this repository Run cargo run If you wish to pass arguments to Topgrade you should pass them after --: cargo run -- -v</description></item><item><title>Step List</title><link>https://topgrade.info/docs/general/step-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://topgrade.info/docs/general/step-list/</guid><description>Steps that Topgrade takes when upgrading: # Linux: Run the system package manager: Arch based: Run yay or fall back to pacman Redhat based: Run yum upgrade (or dnf if present) Debian based: Run apt update &amp;amp;&amp;amp; apt dist-upgrade Clear Linux: Run swupd update Gentoo: Run layman -s ALL &amp;amp;&amp;amp; emerge --sync -q &amp;amp;&amp;amp; eix-update &amp;amp;&amp;amp; emerge -uDNa world openSUSE: Run zypper refresh &amp;amp;&amp;amp; zypper dist-upgrade Void: Run xbps-install -Su Linux: Run etc-update: DragonFly BSD: Upgrade and audit packages FreeBSD: Upgrade and audit packages Unix: Run brew update &amp;amp;&amp;amp; brew upgrade.</description></item><item><title>Supported Platforms</title><link>https://topgrade.info/docs/general/supported-platforms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://topgrade.info/docs/general/supported-platforms/</guid><description>Supported Platforms # Topgrade should probably work on whichever platform it can be built. The real question is whether Topgrade knows that platform and can utilize its unique features, such as the operating system&amp;rsquo;s package manager. Topgrade is tested on and knows the following platforms:
Linux Arch based Red Hat based Debian based Clear Linux Gentoo NixOS openSUSE Void DragonFly BSD FreeBSD macOS Windows</description></item><item><title>Upgrading Topgrade</title><link>https://topgrade.info/docs/general/upgrading-topgrade/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://topgrade.info/docs/general/upgrading-topgrade/</guid><description>Upgrading Topgrade # The precompiled binaries supplied in the Github releases page are compiled with a self upgrade feature. Topgrade will try to upgrade itself before attempting anything else and will respawn itself when an update is downloaded. If you choose to install Topgrade in this method it is recommended that you place the binary in some place which is writable by your user account, such as ~/.local/bin.
If you prefer to have Topgrade installed in system-wide manner then it&amp;rsquo;s recommended to either install it using the OS package manager or cargo install.</description></item><item><title>Windows</title><link>https://topgrade.info/docs/general/windows/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://topgrade.info/docs/general/windows/</guid><description>Windows # Windows is fully supported by Topgrade. You can either install it from Scoop or use the binary in the release page.
One thing to note is that Topgrade will fail to upgrade any application used for launching it, such as 3rd party terminals like cmder.
My personal recommendation is to create a shortcut for topgrade --keep and set this shortcut to always run as administrator, then invoke Topgrade by doubling clicking the shortcut.</description></item><item><title>Creating a New Theme</title><link>https://topgrade.info/posts/creating-a-new-theme/</link><pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate><guid>https://topgrade.info/posts/creating-a-new-theme/</guid><description>Introduction # This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description></item><item><title>Migrate to Hugo from Jekyll</title><link>https://topgrade.info/posts/migrate-from-jekyll/</link><pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate><guid>https://topgrade.info/posts/migrate-from-jekyll/</guid><description>Move static content to static # Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description></item><item><title>(Hu)go Template Primer</title><link>https://topgrade.info/posts/goisforlovers/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>https://topgrade.info/posts/goisforlovers/</guid><description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description></item><item><title>Getting Started with Hugo</title><link>https://topgrade.info/posts/hugoisforlovers/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>https://topgrade.info/posts/hugoisforlovers/</guid><description>Step 1. Install Hugo # Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs # Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:</description></item></channel></rss>